{"name":"DeducerHansel","tagline":"An econometrics plug-in package for Deducer","body":"\r\nDeducerHansel is an econometrics-focused GUI plug-in package for the R package Deducer. It adds a menu with additional statistical techniques that are popular in economics and various other fields. Unlike the base Deducer package, DeducerHansel can work with some time series and spatial data that do not come up in data frame objects. DeducerHansel also has a notably different feel to the way the user interacts with it than what is currently available in the base Deducer package.  \r\n\r\n## Features\r\n1. For some of the more basic modeling estimations, such as ordinary least squares, a \"pretty\" html presentation is provided in\r\n   addition to the classic R output.\r\n2. With the modeling estimation and subsequent plots and tests, a \"Commands Log\" tab is provided to show what R commands are used. \r\n3. For ordinary least squares regression there are more plots and more tests than available in the base Deducer package. Robust standard error options are made available on the dialog and explorer pages for models.\r\n4. Many of the automatically-generated plots are editable within DeducerHansel.\r\n5. Hypothesis testing regarding restrictions on coefficient parameters is done through straightforward typing of the\r\n   null hypothesis, e.g \"b(2) = 0\".\r\n6. For defining new variables to be used in a model, a scroll below the variable selector allow creation of those new variables. This replaces the \"Model Builder\" page in the base Deducer package.\r\n7. Time series data, panel data, and spatial data can be handled. When data comes in a format that is not a dataframe, DeducerHansel allows the creation of a \"mirror\" which is a dataframe clone for the purpose of choosing variables in the variable selector (a partial mirror clones just the variable names, a full mirror clones all of the data). Special methods for dealing time series data, panel data and spatial data are provided.\r\n8. The console is ready for commands while DeducerHansel models are being explored-it is not \"locked\" as in the base Deducer package.\r\n9.In Windows operating systems, DeducerHansel can work with either the standard RGui console or RStudio through a \"floating menu\".This floating menu allows for submenus, which base-Deducer has difficulties with when adding its menu to the standard RGui console.\r\n10. Datasets found in installed packages can be selected through a nice scroller.\r\n11. Data retrieval from net sources (Oanda, St Louis FRED, and Yahoo!) is available (albeit getting data from St Louis FRED is currently not working due to changes in the web address for the data; the maintainer of getSymbols command is working on that).\r\n\r\n## Pre-Installation requirements\r\nDeducerHansel has been succesfully tested in Windows and Mac OS-X environments. It may very well work fine in Linux also. <br />\r\nLike the base Deducer package, DeducerHansel needs Java and R to run. The [Deducer web page] (http://http://www.deducer.org/) has a lot of good information on installing R and Deducer.\r\nDeducer and DeducerHansel are most at \"home\" with the JGR console, for which a JGR launcher is convenient to have. \r\nMore information about these pre-installation issues can be found on the [README.md document at the GitHub repository site for DeducerHansel](https://github.com/RScottH/DeducerHansel/blob/master/README.md). \r\n \r\n## Installation of DeducerHansel\r\nThe most convenient way to install the `DeducerhHansel` package through github is by using the package `devtools`,entering the following commands into R: \r\n\r\nFirst in R, if you have not already installed `devtools`, then enter the following R commands in your R console to do so:\r\n\r\n```R\r\ninstall.packages('devtools')\r\n```\r\n\r\nAfter `devtools` has loaded enter the following R commands:\r\n\r\n```R\r\nrequire(devtools)\r\ninstall_github('RScottH/DeducerHansel')\r\n```\r\n\r\n## Using DeducerHansel\r\nLoading the DeducerHansel package will get it running. The main menu for DeducerHansel is the Hansel Analysis Menu.\r\nThe [README.md document at the GitHub repository site for DeducerHansel](https://github.com/RScottH/DeducerHansel/blob/master/README.md), has information on getting to the Hansel Analysis menu, but by a little investigation of the available menus you will likely find it on your own.\r\n\r\n###The Reset button - An important tip for using dataframes\r\nIf a dataframe is added to your workspace, then it may not show up initially when you look at available dataframes in the variable selector. Next to the scroller on available dataframes is a reset button, which you can double-click to bring up the latest dataframes and clear variable selections. \r\n\r\nThis is in contrast to what occurs in the base Deducer package, in which avaialable dataframes for the variable selector are updated automatically. That is not done in DeducerHansel so that choices of variables by the user would be remembered more frequently--so as a user you can, for example, change from a binary logit specification to a binary probit one without re-selecting your variables. But it is at the cost of you needing to manually reset the available dataframes when you adds one to the workspace (one exception-if the variable selector has not been previously opened then it will look for available dataframes automatically).\r\n\r\n## Author\r\nThe author of the DeducerHansel package is<br /> \r\nR. Scott Hacker (@RScottH).<br /> \r\nProfessor in Applied Econometrics and International Economics<br /> \r\nJönköping University<br /> \r\nJönköping International Business School<br /> \r\nJönköping, Sweden<br /> \r\n[author's school web site](http://hj.se/jibs/en/research/persons/scott-hacker.html)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}